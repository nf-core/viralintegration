name: nf-core CI
# This workflow runs the pipeline with the minimal test dataset to check that it completes without any syntax errors
on:
  push:
    branches:
      - dev
  pull_request:
  release:
    types: [published]

env:
  NXF_ANSI_LOG: false

concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}"
  cancel-in-progress: true

jobs:
  test:
    name: nf-test ${{ matrix.profile }}-${{ matrix.NXF_VER }}
    # Only run on push if this is the nf-core dev branch (merged PRs)
    if: "${{ github.event_name != 'push' || (github.event_name == 'push' && github.repository == 'nf-core/viralintegration') }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NXF_VER:
          - "23.04.0"
          - "latest-everything"
        profile: ["docker"] # TODO , "singularity", "conda"]
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Cache Nextflow installation
        id: cache-software
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          path: |
            /usr/local/bin/nextflow
            /usr/local/bin/nf-test
            /home/runner/.nf-test/nf-test.jar
          key: viralintegration-${{ runner.os }}-${{ matrix.NXF_VER }}

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v1
        with:
          version: "${{ matrix.NXF_VER }}"

      - name: Disk space cleanup
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1

      - name: Install nf-test
        if: steps.cache-software.outputs.cache-hit != 'true'
        run: |
          wget -qO- https://code.askimed.com/install/nf-test | bash
          sudo mv nf-test /usr/local/bin/

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-singularity@v5
        with:
          singularity-version: 3.7.1

      - name: Set up miniconda
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          channels: conda-forge,bioconda,defaults
          python-version: ${{ matrix.python-version }}

      - name: Conda clean
        if: matrix.profile == 'conda'
        run: conda clean -a

      - name: Run nf-test
        run: |
          nf-test test --profile "test,${{ matrix.profile }}" --junitxml=test.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: test.xml

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    // TODO Dedup these?
    withName: STAR_ALIGN_HOST {
        ext.args = '--readFilesCommand zcat \
        --outSAMtype BAM SortedByCoordinate \
        --outSAMstrandField intronMotif \
        --outSAMunmapped Within \
        --twopassMode Basic \
        --alignSJDBoverhangMin 10 \
        --genomeSuffixLengthMax 10000 \
        --limitBAMsortRAM 47271261705 \
        --alignInsertionFlush Right \
        --alignMatesGapMax 100000 \
        --alignIntronMax 100000 \
        --peOverlapNbasesMin 12 \
        --peOverlapMMp 0.1 \
        --alignSJstitchMismatchNmax 5 -1 5 5 \
        --alignSplicedMateMapLminOverLmate 0 \
        --alignSplicedMateMapLmin 30 \
        --outReadsUnmapped Fastx'
        ext.prefix = { "${meta.id}.host" }
    }

    withName: STAR_ALIGN_PLUS {
        ext.args = '--readFilesCommand zcat \
        --outSAMtype BAM SortedByCoordinate \
        --outSAMstrandField intronMotif \
        --outSAMunmapped Within \
        --twopassMode Basic \
        --alignSJDBoverhangMin 10 \
        --genomeSuffixLengthMax 10000 \
        --limitBAMsortRAM 47271261705 \
        --alignInsertionFlush Right \
        --alignMatesGapMax 100000 \
        --alignIntronMax 100000 \
        --peOverlapNbasesMin 12 \
        --peOverlapMMp 0.1 \
        --alignSJstitchMismatchNmax 5 -1 5 5 \
        --alignSplicedMateMapLminOverLmate 0 \
        --alignSplicedMateMapLmin 30 \
        --chimJunctionOverhangMin 12 \
        --chimOutJunctionFormat 0 \
        --chimSegmentMin 8 \
        --chimSegmentReadGapMax 3 \
        --chimScoreJunctionNonGTAG 0 \
        --chimNonchimScoreDropMin 10 \
        --chimMultimapScoreRange 10 \
        --chimMultimapNmax 2 \
        --chimOutType Junctions WithinBAM \
        --outReadsUnmapped Fastx'
        ext.prefix = { "${meta.id}.plus" }
    }

    withName: STAR_ALIGN_VALIDATE {
        ext.args = '--readFilesCommand zcat \
        --outSAMstrandField intronMotif \
        --outSAMunmapped Within \
        --alignSJDBoverhangMin 10 \
        --genomeSuffixLengthMax 10000 \
        --alignInsertionFlush Right \
        --outSAMfilter KeepOnlyAddedReferences \
        --alignMatesGapMax 100000 \
        --alignIntronMax 100000 \
        --peOverlapNbasesMin 12 \
        --peOverlapMMp 0.1 \
        --alignSJstitchMismatchNmax 5 -1 5 5 \
        --alignSplicedMateMapLminOverLmate 0 \
        --alignSplicedMateMapLmin 30'
        ext.prefix = { "${meta.id}.validate_inserts" }
    }

    withName: TRIMMOMATIC {
        ext.args2 = 'ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:5 LEADING:5 TRAILING:5 MINLEN:25'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
